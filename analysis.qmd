---
title: "Analysis"
editor: 
  markdown: 
    wrap: 72
---

Loading necessary libraries :

```{r, message=FALSE, results='asis'}
#| warning: false
#| code-summary: "Show the code"
#| code-fold: true

library(readxl)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(knitr)
library(ggrepel)
library(reshape2)
library(gridExtra)
```

Load the data:

```{r, message=FALSE, results='asis'}
#| warning: false
#| code-summary: "Show the code"
#| code-fold: true

load("library_museum_updated.RData")
data <-library_museum_updated
```

For regional analysis, 'region' column will first be added to the data:

```{r}
#| code-fold: true
#| code-summary: "Show the code"
akdeniz <- c("Antalya", "Burdur", "Isparta", "Mersin", "Adana", "Hatay", "Osmaniye", "Kahramanmaraş")
dogu_anadolu <- c("Malatya", "Erzincan", "Elazığ", "Tunceli", "Bingöl", "Erzurum", "Muş", "Bitlis", "Şırnak", "Kars", "Ağrı", "Ardahan", "Van", "Iğdır", "Hakkari")
ege <- c("İzmir", "Aydın", "Muğla", "Manisa", "Denizli", "Uşak", "Kütahya", "Afyonkarahisar")
guneydogu_anadolu <- c("Gaziantep", "Kilis", "Adıyaman", "Şanlıurfa", "Diyarbakır", "Mardin", "Batman", "Siirt")
ic_anadolu <- c("Eskişehir", "Konya", "Ankara", "Çankırı", "Aksaray", "Kırıkkale", "Kırşehir", "Yozgat", "Niğde", "Nevşehir", "Kayseri", "Karaman", "Sivas")
karadeniz <- c("Bolu", "Düzce", "Zonguldak", "Karabük", "Bartın", "Kastamonu", "Çorum", "Sinop", "Samsun", "Amasya", "Tokat", "Ordu", "Giresun", "Gümüşhane", "Trabzon", "Bayburt", "Rize", "Artvin")
marmara <- c("Çanakkale", "Balıkesir", "Edirne", "Tekirdağ", "Kırklareli", "İstanbul", "Bursa", "Yalova", "Kocaeli", "Bilecik", "Sakarya")

assign_region <- function(city) {
  if (city %in% akdeniz) {
    return("Akdeniz")
  } else if (city %in% dogu_anadolu) {
    return("Doğu Anadolu")
  } else if (city %in% ege) {
    return("Ege")
  } else if (city %in% guneydogu_anadolu) {
    return("Güneydoğu Anadolu")
  } else if (city %in% ic_anadolu) {
    return("İç Anadolu")
  } else if (city %in% karadeniz) {
    return("Karadeniz")
  } else if (city %in% marmara) {
    return("Marmara")
  } else {
    return(NA)
  }
}

data <- data %>% mutate(region = sapply(city, assign_region)) %>% relocate(region,.after = city)
data$region <- as.factor(data$region)
```

## 1) Correlation Between Attributes

```{r, message=FALSE, results='asis'}
#| warning: false
#| code-summary: "Show the code"
#| code-fold: true

correlation_matrix <- cor(library_museum_updated[, c(3:21)], use = "complete.obs")

melted_corr_matrix <- melt(correlation_matrix)

ggplot(melted_corr_matrix, aes(Var1, Var2, fill = value)) +
  geom_tile() + labs(x = " ", y = " ") +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```

In the areas where the squares are dark red, there is a positive
correlation between the variables. In cities with a high population, the
number of museums, libraries, theater and cinema audience numbers, and
the number of suicides are also high. Conversely, when the number of
pieces in a museum is high, it is observed that the number of museums,
libraries, audience numbers of theaters and cinemas are also high. The
variables intersecting in dark blue-purple squares, on the other hand,
have a negative correlation. That is, there is an inverse relationship
between the proportion of the young population and the literacy rate.

## 2) Relationship Between Attributes

### 2.1)

```{r}
#| code-fold: true
#| code-summary: "Show the code"
cor_pop_book_2 <- cor(data$literacy_rate, data$prop_youth_population)
cat("Correlation between Literacy Rate and Proportion of Youth Population:",cor_pop_book_2,"\n")
```

\-\--ACIKLAMA

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data|>
  filter(year==2022)|>
ggplot(aes(x = literacy_rate, y = prop_youth_population, color = region)) +
  geom_point() +  
  geom_smooth(method = "lm", se = FALSE, color = "yellow", formula = y ~ x)+ 
  labs(x = "Literacy Rate", y = "Proportion of Youth Population") + 
  ggtitle("Scatter Plot of Literacy Rate vs Proportion of Youth Population in 2022") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5))
```

ACIKLAMA-beyza

### 2.2)

```{r}
#| code-fold: true
#| code-summary: "Show the code"
cor_pop_book <- cor(data$population, data$book_num)
cat("Correlation between Population and Number of Books:",cor_pop_book,"\n")
```

The correlation of 0.8455922 indicates a strong positive relationship
between population and the number of books. In other words, as the
population of cities generally increases, there is a tendency for the
number of books in libraries to increase as well. Let's try to support
this with visualizations.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data|>
  filter(year==2022) |>
ggplot( aes(x = population, y = book_num,color = region)) +
  geom_point() +  
  geom_smooth(method = "lm", se = FALSE, color = "yellow", formula = y ~ x)+ 
  labs(x = "Population", y = "Book Count") + 
  ggtitle("Scatter Plot of Population vs Book Count") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5),axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +
  scale_x_continuous(labels = scales::comma, breaks = seq(0, 15000000, by = 1000000))
```

According to the 2022 data from the Turkish Statistical Institute, 97.6%
of the cities in Turkey have a population of less than 5 million. As
seen in the above graph, the areas where the points are dense correspond
to locations with a population of less than 5 million. For this reason,
the following plot was created.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data %>%
  filter(population <= 5000000 & year==2022) %>%
  ggplot(aes(x = population, y = book_num,color = region)) +
  geom_point() +  
  geom_smooth(method = "lm", se = FALSE, color = "yellow", formula = y ~ x) + 
  labs(x = "Population", y = "Book Count") + 
  ggtitle("Scatter Plot of Population vs Book Count (Max 5 Million Population)") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +
  scale_x_continuous(labels = scales::comma, breaks = seq(0, 5000000, by = 1000000))+ scale_y_continuous(labels = scales::comma)
```

We supported the correlation results with visualizations. We can say
that there is a tendency for the number of books in libraries to
increase as the population in cities generally increases.

### 2.3)

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data %>%
  filter(year == 2022) %>%
  mutate(book_per_person=book_num/population,city = factor(city, levels = unique(city[order(book_per_person, decreasing = TRUE)]))) %>%
  ggplot(aes(x = city, y = book_per_person * 100)) +
  geom_point(color = "purple") +  
  geom_smooth(method = "lm", se = FALSE, color = "yellow", formula = y ~ x) + 
  labs(x = "Cities", y = "Book Number per Population (*100)") + 
  ggtitle("Scatter Plot of Cities vs Book Number per Population in 2022") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1, size = 6))
```

-AÇIKLAMA kerem

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data %>%
  filter(year == 2022) %>%
  mutate(museum_per_person=((ministry_museum_num + private_museum_num)/population), city = factor(city, levels = unique(city[order(museum_per_person, decreasing = TRUE)]))) %>%
  ggplot(aes(x = city, y = museum_per_person * 100000)) +
  geom_point(color = "purple") +  
  geom_smooth(method = "lm", se = FALSE, color = "yellow", formula = y ~ x) + 
  labs(x = "Cities", y = "Museum Number per Population (*100000) ") + 
  ggtitle("Scatter Plot of Cities vs Museum Number per Population in 2022") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5), axis.text.x = element_text(angle = 90, hjust = 1, size = 6))

```

-AÇIKLAMA- kerem

```{r}
#| code-fold: true
#| code-summary: "Show the code"

data %>%
  filter(year == 2022) %>%
  mutate(book_num_per_lib=(book_num/public_lib), city = factor(city, levels = unique(city[order(book_num_per_lib, decreasing = TRUE)]))) %>%
  ggplot(aes(x = city, y = book_num_per_lib )) +
  geom_point(color = "purple") +  
  geom_smooth(method = "lm", se = FALSE, color = "yellow", formula = y ~ x) + 
  labs(x = "Cities", y = "Book Number per Library") + 
  ggtitle("Scatter Plot of Cities vs Book Number per Library in 2022") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5), axis.text.x = element_text(angle = 90, hjust=1,size=6))
```

-AÇIKLAMA beyza

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data %>%
  filter(year == 2022) %>%
  mutate(user_num_per_pop=(user_num/population), city = factor(city, levels = unique(city[order(user_num_per_pop, decreasing = TRUE)]))) %>%
  ggplot(aes(x = city, y = user_num_per_pop )) +
  geom_point(color = "purple") +  
  geom_smooth(method = "lm", se = FALSE, color = "yellow", formula = y ~ x) + 
  labs(x = "Cities", y = "User Number per Population") + 
  ggtitle("Scatter Plot of Cities vs User Number per Population in 2022") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5), axis.text.x = element_text(angle = 90, hjust=1,size=6))
```

-AÇIKLAMA kerem

```{r}
#| code-fold: true
#| code-summary: "Show the code"

population_2015 <- data %>%
  filter(year==2015) %>% select(city,population)
population_2022 <- data %>%
  filter(year==2022) %>% select(city,population)
population_change <- data %>%
  filter(year==2015) %>% select(city) %>% mutate(population_frac = (population_2022$population-population_2015$population)/population_2015$population) %>% arrange(desc(population_frac))

kable(head(population_change), 
      format = "html", 
      caption = "Top 6 Cities in Turkey with the Highest Population Change",
      col.names = c("City", "Population CFraction"),
      align = c("c", "c")) 
```

```{r}
#| code-fold: true
#| code-summary: "Show the code"

p1 <- data %>% 
  filter(city %in% c("Yalova","Tekirdağ","Antalya","Kocaeli")) %>% mutate(user_num_per_pop=(user_num/population)) %>%
  ggplot(aes(x = year, y = user_num_per_pop, color = city)) +
  geom_line() +  
  labs(x = "Years", y = "User Number per Population") + 
  ggtitle("Scatter Plot of Cities vs User Number per Population") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5)) 
p2 <- data %>% 
  filter(city %in% c("Yalova","Tekirdağ","Antalya","Kocaeli")) %>%
  ggplot(aes(x = year, y = population/10000000, color = city)) +
  geom_line() +  
  labs(x = "Years", y = "Population/10M") + 
  ggtitle("Scatter Plot of Cities vs Population") +
  theme_minimal() +
  theme(plot.title = element_text(size = 12, hjust = 0.5))
grid.arrange(p1, p2, ncol = 2)
```

-AÇIKLAMA- beyza bişiler sallayacak

### 3) The number of historical remnants in cities in Turkiye

```{r}
#| code-fold: true
#| code-summary: "Show the code"
top5_ruins <- data %>%
  filter(year == 2022) %>%
  arrange(desc(ruins_num)) %>%
  head(5) %>%
  select(city, ruins_num)
kable(top5_ruins, 
      format = "html", 
      caption = "Top 5 Cities in Turkey with the Highest Number of Historical Remnants in 2022",
      col.names = c("City", "Historical Remnants"),
      align = c("c", "c")) 
```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data %>%
  filter(year == 2022 & ruins_num > 0) %>%
  mutate(city = factor(city, levels = unique(city[order(ruins_num, decreasing = FALSE)]))) %>%
  arrange(desc(ruins_num)) %>%
  ggplot(aes(x = city, y = ruins_num)) +
  geom_bar(stat = "identity", fill = "purple", color = "yellow") +
  labs(x = "City", y = "Number of Historical Remnants") +
  ggtitle("The number of historical remnants in cities in Turkiye (2022)") +
  theme_minimal() +
  theme(legend.position = "none",
        axis.text.x = element_text(angle = 0, hjust = 1, size = 5),
        axis.text.y = element_text(size = 8),
        plot.title = element_text(size = 12, hjust = 0.5)) +
  scale_x_discrete(breaks = unique(data$city)) +
  scale_y_continuous(breaks = seq(0, max(data$ruins_num), by = 1))+
  coord_flip()

```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| warning: false
top_cities_2020 <- data %>%
  filter(year == 2020) %>%
  arrange(desc(cinema_audiences_num)) %>%
  slice(1:10)


ggplot(top_cities_2020, aes(x = population, y = cinema_audiences_num, label = city)) +
  geom_point() +
  geom_text_repel(size = 3.5) +
  theme_minimal() +
  labs(title = "Cinema Audience Distribution by Population",
       x = "Populatıon",
       y = "cinema_audiences_num") +
  scale_x_continuous(labels = scales::comma) +
  scale_y_continuous(labels = scales::comma)

```

```{r}
#| code-fold: true
#| code-summary: "Show the code"
data_2020 <- data %>%
  filter(year == 2020)

top_literacy_cities_2020 <- data_2020 %>%
  arrange(desc(literacy_rate)) %>%
  slice_head(n = 10)

ggplot(top_literacy_cities_2020, aes(x = loaned_book_num, y = suicides_num, color = city)) +
  geom_point() +
  geom_text_repel(aes(label = city)) +
  labs(x = "Loaned Book Number", y = "Number of Suicides",
       title = "The Effect of Literacy Rate on Suicide Rates") +
  theme_minimal() +
  theme(legend.position = "right")

```

### 4) Regional Analysis

```{r}
#| warning: false
#| code-summary: "Show the code"
#| code-fold: true
data %>%
  filter(year == 2022) %>%
  pivot_longer(cols = c(cinema_audiences_num, theater_audiences_num), names_to = "Audience_Type", values_to = "Audience_Num") %>%
  ggplot(aes(x = region, y = Audience_Num, fill = Audience_Type)) +
  geom_boxplot(position = "dodge") +
  scale_y_log10() +
  labs(x = "Region", y = "Audience Number", fill = "Audience Type") +
  ggtitle("Cinema and Theater Audience Numbers by Region in 2022") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

```

-AÇIKLAMA- beyza

```{r}
#| warning: false
#| code-summary: "Show the code"
#| code-fold: true
data %>%
  filter(year == 2022) %>%
  pivot_longer(cols = c(ministry_museum_visitor_num, private_museum_visitor_num), names_to = "Visitor_Type", values_to = "Visitor_Num") %>%
  ggplot(aes(x = region, y = Visitor_Num, fill = Visitor_Type)) +
  geom_boxplot(position = "dodge") +
  scale_y_log10() +
  labs(x = "Region", y = "Visitor Number", fill = "Museum Type") +
  ggtitle("Ministry and Private Museum Visitor Numbers by Region in 2022") + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

```

-AÇIKLAMA- kerem
